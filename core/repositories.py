from core.entities import User, Area, Worldfrom engine.modules.auth.repository import AbstractUserRepositoryfrom engine.repository import Repository, Entity@Entity(User)class UserRepository(AbstractUserRepository):    def find_user(self, uid=None, email=None, username=None, code=None):        if uid is not None:            return self.get(uid)        sq = self.session.query(User)        if username is not None:            sq = sq.filter(User.username == username)        elif email is not None:            sq = sq.filter(User.email == email)        elif code is not None:            sq = sq.filter(User.forgot_code == code)        else:            return None        return sq.first()@Entity(Area)class AreaRepository(Repository):    pass#@Entity(Figure)#class FigureRepository(Repository):#    pass@Entity(World)class WorldRepository(Repository):    pass